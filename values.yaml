rbac:
  create: true

## Define serviceAccount names for components. Defaults to component's fully qualified name.
##
serviceAccounts:
  dfclient:
    create: true
    name:
  supernode:
    create: true
    name:

dfclient:
  name: dfclient
  ## dfclient container image
  ##
  image:
    repository: dragonflyoss/dfclient
    tag: 1.0.0
    pullPolicy: IfNotPresent

  ## dfclient priorityClassName
  ##
  priorityClassName: ""

  ## dfclient container arguments
  ##
  args: []

  ## Node tolerations for dfclient scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: 
    - key: "node-role.kubernetes.io/master"
      operator: "Exists"
      effect: "NoSchedule"

  ## Node labels for dfclient pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Annotations to be added to dfclient pods
  ##
  podAnnotations: {}

  ## Labels to be added to dfclient pods
  ##
  podLabels: {}

  ## dfclient resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 500m
    #   memory: 512Mi

  ## Security context to be added to dfclient pods
  ##
  securityContext: {}

  ## If true, dfclient pods share the host network namespace
  ##
  hostNetwork: true

  dnsPolicy: ClusterFirstWithHostNet

  ## Additional dfclient hostPath mounts
  ##
  extraHostPathMounts:
    # - name: logs
    #   mountPath: /root/.small-dragonfly/logs
    #   hostPath: /var/dragonfly/logs
    # - name: df.key
    #   mountPath: /etc/dragonfly/df.key
    #   hostPath: df.key
    #   readOnly: true
    # - name: df.crt
    #   mountPath: /etc/dragonfly/df.crt
    #   hostPath: df.crt
    #   readOnly: true

  ## Additional dfclient Secret mounts
  ## Defines additional mounts with secrets. Secrets must be manually created in the namespace.
  extraSecretMounts: []
    # - name: secret-files
    #   mountPath: /etc/secrets
    #   subPath: ""
    #   secretName: dfclient-secret-files
    #   readOnly: true

  ## dfdaemon config data
  ## Ref: https://github.com/dragonflyoss/Dragonfly/tree/master/docs/config
  ##
  configData:
    dfget_flags: ["--verbose","-f","Expires&OSSAccessKeyId&Signature"]
    verbose: false
    proxies:
      - regx: blobs/sha256.*
    # hijack_https:
    #   cert: /etc/dragonfly/df.crt
    #   key: /etc/dragonfly/df.key
    #   hosts:
    #     - regx: index.docker.io

supernode:
  name: supernode
  ## supernode container image
  ##
  image:
    repository: dragonflyoss/supernode
    tag: 1.0.0
    pullPolicy: IfNotPresent
  
  ## supernode priorityClassName
  ##
  priorityClassName: ""

  ## Additional supernode container arguments
  ##
  extraArgs: []

  ## Supernode Deployment Strategy type
  # strategy:
  #   type: Recreate

  ingress:
    ## If true, supernode Ingress will be created
    ##
    enabled: false

    ## supernode Ingress annotations
    ##
    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    ## supernode Ingress additional labels
    ##
    extraLabels: {}

    ## supernode Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ##
    hosts: []
    #   - supernode.domain.com
    #   - domain.com/supernode

    ## supernode Ingress TLS configuration
    ## Secrets must be manually created in the namespace
    ##
    tls: []
    #   - secretName: supernode-tls
    #     hosts:
    #       - supernode.domain.com

  hostAliases: {}
    # - ip: "127.0.0.1"
    #   hostnames:
    #     - "foo.local"
    #     - "bar.local"
    # - ip: "10.1.2.3"
    #   hostnames:
    #     - "foo.remote"
    #     - "bar.remote"

  ## Node tolerations for supernode scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []

  ## Node labels for supernode pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  persistence:
    enabled: false
    accessModes:
      - ReadWriteOnce
    annotations: {}
    ## supernode data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

    ## supernode data Persistent Volume existing claim name
    ## Requires supernode.persistentVolume.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    existingClaim: ""

    ## supernode data Persistent Volume mount root path
    ##
    mountPath: /home/admin/supernode
    size: 100Gi

  emptyDir:
    # medium: "Memory"
    sizeLimit: 10Gi

  ## Annotations to be added to supernode pods
  ##
  podAnnotations: {}

  ## Labels to be added to supernode pods
  ##
  podLabels: {}

  ## Use a StatefulSet if replicaCount needs to be greater than 1 (see below)
  ##
  replicaCount: 1

  statefulSet:
    ## If true, use a statefulset instead of a deployment for pod management.
    ## This allows to scale replicas to more than 1 pod
    ##
    enabled: false
    annotations: {}
    labels: {}
    podManagementPolicy: OrderedReady

    ## Supernode headless service to use for the statefulset
    ##
    headless:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8002" 
      labels: {}

  ## supernode resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 500m
    #   memory: 512Mi

  ## Security context to be added to supernode pods
  ##
  securityContext: {}

  service:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8002"
    labels: {}
    ports:
      targetPortHTTP: 8002
      targetPortNginx: 8001
      # nodePortHTTP: 30000
      # nodePortNginx: 30001
    type: ClusterIP  

  ## Additional supernode Secret mounts
  ## Defines additional mounts with secrets. Secrets must be manually created in the namespace.
  extraSecretMounts: []
    # - name: secret-files
    #   mountPath: /etc/secrets
    #   subPath: ""
    #   secretName: supernode-secret-files
    #   readOnly: true

  # supernode config data
  # Ref: https://github.com/dragonflyoss/Dragonfly/tree/master/docs/config
  #
  configData:
    base:
      listenPort: 8002
      downloadPort: 8001
      homeDir: /home/admin/supernode
      schedulerCorePoolSize: 10
      peerUpLimit: 5
      peerDownLimit: 4
      eliminationLimit: 5
      failureCountLimit: 5
      systemReservedBandwidth: 20M
      maxBandwidth: 200M
      enableProfiler: false
      debug: false
      failAccessInterval: 3m
      gcInitialDelay: 6s
      gcMetaInterval: 2m
      taskExpireTime: 3m
      peerGCDelay: 3m
      gcDiskInterval: 15s
      youngGCThreshold: 100G
      fullGCThreshold: 5G
      IntervalThreshold: 2h
    plugins:
      storage:
        - name: local
          enabled: true
          config: |
            baseDir: /home/admin/supernode/repo
